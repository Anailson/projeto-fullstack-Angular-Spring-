package com.example.algamoney.api.config;

import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.config.http.SessionCreationPolicy;

@Configuration
@EnableWebSecurity
public class SecurityConfig extends WebSecurityConfigurerAdapter{
	
	@Override
	protected void configure(AuthenticationManagerBuilder auth) throws Exception {
		
		auth.inMemoryAuthentication()
			.withUser("admin").password("admin").roles("ROLE");
	}
	
	@Override
	protected void configure(HttpSecurity http) throws Exception {
	
		/**Configuração de autenticação com liberação para o endpoint /category e restrição
		com autenticação básica para os demais. Sem gravação de sessão, não mantém estado (stateless)
 		Com Cross Site Request Forgery desabilitado
		 * 
		 */
		http.authorizeRequests()
		     .antMatchers("/categorias").permitAll()
		     .anyRequest().authenticated()
		     .and()
		     .httpBasic().and()
		     .sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS).and()
		     .csrf().disable();
		     
	}

}
